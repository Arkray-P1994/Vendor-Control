/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VendorIndexRouteImport } from './routes/vendor/index'
import { Route as VendorCreateRouteImport } from './routes/vendor/create'
import { Route as VendorUpdateIdRouteImport } from './routes/vendor/update/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorIndexRoute = VendorIndexRouteImport.update({
  id: '/vendor/',
  path: '/vendor/',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorCreateRoute = VendorCreateRouteImport.update({
  id: '/vendor/create',
  path: '/vendor/create',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorUpdateIdRoute = VendorUpdateIdRouteImport.update({
  id: '/vendor/update/$id',
  path: '/vendor/update/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/vendor/create': typeof VendorCreateRoute
  '/vendor': typeof VendorIndexRoute
  '/vendor/update/$id': typeof VendorUpdateIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/vendor/create': typeof VendorCreateRoute
  '/vendor': typeof VendorIndexRoute
  '/vendor/update/$id': typeof VendorUpdateIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/vendor/create': typeof VendorCreateRoute
  '/vendor/': typeof VendorIndexRoute
  '/vendor/update/$id': typeof VendorUpdateIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/vendor/create' | '/vendor' | '/vendor/update/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/vendor/create' | '/vendor' | '/vendor/update/$id'
  id: '__root__' | '/' | '/vendor/create' | '/vendor/' | '/vendor/update/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  VendorCreateRoute: typeof VendorCreateRoute
  VendorIndexRoute: typeof VendorIndexRoute
  VendorUpdateIdRoute: typeof VendorUpdateIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/': {
      id: '/vendor/'
      path: '/vendor'
      fullPath: '/vendor'
      preLoaderRoute: typeof VendorIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/create': {
      id: '/vendor/create'
      path: '/vendor/create'
      fullPath: '/vendor/create'
      preLoaderRoute: typeof VendorCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/update/$id': {
      id: '/vendor/update/$id'
      path: '/vendor/update/$id'
      fullPath: '/vendor/update/$id'
      preLoaderRoute: typeof VendorUpdateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  VendorCreateRoute: VendorCreateRoute,
  VendorIndexRoute: VendorIndexRoute,
  VendorUpdateIdRoute: VendorUpdateIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
